{
  "description": "DataVolumeSource represents the source for our Data Volume, this can be HTTP, Imageio, S3, Registry or an existing PVC",
  "type": "object",
  "properties": {
    "blank": {
      "description": "DataVolumeBlankImage provides the parameters to create a new raw blank image for the PVC",
      "type": "object"
    },
    "http": {
      "description": "DataVolumeSourceHTTP can be either an http or https endpoint, with an optional basic auth user name and password, and an optional configmap containing additional CAs",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "certConfigMap": {
          "description": "CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate",
          "type": "string"
        },
        "extraHeaders": {
          "description": "ExtraHeaders is a list of strings containing extra headers to include with HTTP transfer requests",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secretExtraHeaders": {
          "description": "SecretExtraHeaders is a list of Secret references, each containing an extra HTTP header that may include sensitive information",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secretRef": {
          "description": "SecretRef A Secret reference, the secret should contain accessKeyId (user name) base64 encoded, and secretKey (password) also base64 encoded",
          "type": "string"
        },
        "url": {
          "description": "URL is the URL of the http(s) endpoint",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "imageio": {
      "description": "DataVolumeSourceImageIO provides the parameters to create a Data Volume from an imageio source",
      "type": "object",
      "required": [
        "url",
        "diskId"
      ],
      "properties": {
        "certConfigMap": {
          "description": "CertConfigMap provides a reference to the CA cert",
          "type": "string"
        },
        "diskId": {
          "description": "DiskID provides id of a disk to be imported",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef provides the secret reference needed to access the ovirt-engine",
          "type": "string"
        },
        "url": {
          "description": "URL is the URL of the ovirt-engine",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "pvc": {
      "description": "DataVolumeSourcePVC provides the parameters to create a Data Volume from an existing PVC",
      "type": "object",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "name": {
          "description": "The name of the source PVC",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the source PVC",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "registry": {
      "description": "DataVolumeSourceRegistry provides the parameters to create a Data Volume from an registry source",
      "type": "object",
      "properties": {
        "certConfigMap": {
          "description": "CertConfigMap provides a reference to the Registry certs",
          "type": "string"
        },
        "imageStream": {
          "description": "ImageStream is the name of image stream for import",
          "type": "string"
        },
        "pullMethod": {
          "description": "PullMethod can be either \"pod\" (default import), or \"node\" (node docker cache based import)",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef provides the secret reference needed to access the Registry source",
          "type": "string"
        },
        "url": {
          "description": "URL is the url of the registry source (starting with the scheme: docker, oci-archive)",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "s3": {
      "description": "DataVolumeSourceS3 provides the parameters to create a Data Volume from an S3 source",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "certConfigMap": {
          "description": "CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef provides the secret reference needed to access the S3 source",
          "type": "string"
        },
        "url": {
          "description": "URL is the url of the S3 source",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "upload": {
      "description": "DataVolumeSourceUpload provides the parameters to create a Data Volume by uploading the source",
      "type": "object"
    },
    "vddk": {
      "description": "DataVolumeSourceVDDK provides the parameters to create a Data Volume from a Vmware source",
      "type": "object",
      "properties": {
        "backingFile": {
          "description": "BackingFile is the path to the virtual hard disk to migrate from vCenter/ESXi",
          "type": "string"
        },
        "initImageURL": {
          "description": "InitImageURL is an optional URL to an image containing an extracted VDDK library, overrides v2v-vmware config map",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef provides a reference to a secret containing the username and password needed to access the vCenter or ESXi host",
          "type": "string"
        },
        "thumbprint": {
          "description": "Thumbprint is the certificate thumbprint of the vCenter or ESXi host",
          "type": "string"
        },
        "url": {
          "description": "URL is the URL of the vCenter or ESXi host with the VM to migrate",
          "type": "string"
        },
        "uuid": {
          "description": "UUID is the UUID of the virtual machine that the backing file is attached to in vCenter/ESXi",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}